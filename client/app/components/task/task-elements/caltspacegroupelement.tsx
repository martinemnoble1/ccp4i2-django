import { CCP4i2TaskElementProps } from "./task-element";
import { useJob } from "../../../utils";
import {
  Autocomplete,
  Button,
  Card,
  CardContent,
  CardHeader,
  TextField,
} from "@mui/material";
import { Info } from "@mui/icons-material";
import { useState } from "react";

const spacegroups = [
  "P1",
  "P-1",
  "P2",
  "P21",
  "C2",
  "Pm",
  "Pc",
  "Cm",
  "Cc",
  "P2/m",
  "P21/m",
  "C2/m",
  "P2/c",
  "P21/c",
  "C2/c",
  "P222",
  "P2221",
  "P21212",
  "P212121",
  "C2221",
  "C222",
  "F222",
  "I222",
  "I212121",
  "Pmm2",
  "Pmc21",
  "Pcc2",
  "Pma2",
  "Pca21",
  "Pnc2",
  "Pmn21",
  "Pba2",
  "Pna21",
  "Pnn2",
  "Cmm2",
  "Cmc21",
  "Ccc2",
  "Amm2",
  "Abm2",
  "Ama2",
  "Aba2",
  "Fmm2",
  "Fdd2",
  "Imm2",
  "Iba2",
  "Ima2",
  "Pmmm",
  "Pnnn",
  "Pccm",
  "Pban",
  "Pmma",
  "Pnna",
  "Pmna",
  "Pcca",
  "Pbam",
  "Pccn",
  "Pbcm",
  "Pnnm",
  "Pmmn",
  "Pbcn",
  "Pbca",
  "Pnma",
  "Cmcm",
  "Cmca",
  "Cmmm",
  "Cccm",
  "Cmma",
  "Ccca",
  "Fmmm",
  "Fddd",
  "Immm",
  "Ibam",
  "Ibca",
  "Imma",
  "P4",
  "P41",
  "P42",
  "P43",
  "I4",
  "I41",
  "P-4",
  "I-4",
  "P4/m",
  "P42/m",
  "P4/n",
  "P42/n",
  "I4/m",
  "I41/a",
  "P422",
  "P4212",
  "P4122",
  "P41212",
  "P4222",
  "P42212",
  "P4322",
  "P43212",
  "I422",
  "I4122",
  "P4mm",
  "P4bm",
  "P42cm",
  "P42nm",
  "P4cc",
  "P4nc",
  "P42mc",
  "P42bc",
  "I4mm",
  "I4cm",
  "I41md",
  "I41cd",
  "P-42m",
  "P-42c",
  "P-421m",
  "P-421c",
  "P-4m2",
  "P-4c2",
  "P-4b2",
  "P-4n2",
  "I-4m2",
  "I-4c2",
  "I-42m",
  "I-42d",
  "P4/mmm",
  "P4/mcc",
  "P4/nbm",
  "P4/nnc",
  "P4/mbm",
  "P4/mnc",
  "P4/nmm",
  "P4/ncc",
  "P42/mmc",
  "P42/mcm",
  "P42/nbc",
  "P42/nnm",
  "P42/mbc",
  "P42/mnm",
  "P42/nmc",
  "P42/ncm",
  "I4/mmm",
  "I4/mcm",
  "I41/amd",
  "I41/acd",
  "P3",
  "P31",
  "P32",
  "H3",
  "R3",
  "P-3",
  "H-3",
  "R-3",
  "P312",
  "P321",
  "P3112",
  "P3121",
  "P3212",
  "P3221",
  "H32",
  "R32",
  "P3m1",
  "P31m",
  "P3c1",
  "P31c",
  "H3m",
  "R3m",
  "H3c",
  "R3c",
  "P-31m",
  "P-31c",
  "P-3m1",
  "P-3c1",
  "H-3m",
  "R-3m",
  "H-3c",
  "R-3c",
  "P23",
  "F23",
  "I23",
  "P213",
  "I213",
  "Pm-3",
  "Pn-3",
  "Fm-3",
  "Fd-3",
  "Im-3",
  "Pa-3",
  "Ia-3",
  "P432",
  "P4232",
  "F432",
  "F4132",
  "I432",
  "P4332",
  "P4132",
  "I4132",
  "P-43m",
  "F-43m",
  "I-43m",
  "P-43n",
  "F-43c",
  "I-43d",
  "Pm-3m",
  "Pn-3n",
  "Pm-3n",
  "Pn-3m",
  "Fm-3m",
  "Fm-3c",
  "Fd-3m",
  "Fd-3c",
  "Im-3m",
  "Ia-3d",
  "P112",
  "P1121",
  "B2",
  "A2",
  "I2",
  "I21",
  "P11m",
  "P11b",
  "B11m",
  "B11b",
  "P112/m",
  "P1121/m",
  "B112/m",
  "P112/b",
  "P1121/b",
  "B112/b",
  "P2122",
  "P2212",
  "P21212a",
  "P21221",
  "P22121",
  "C2221a",
  "C222a",
  "F222a",
  "I222a",
  "Pmmn2",
  "P42212a",
  "I23a",
];

const hmLookup = {
  "P 1": "P 1",
  "P -1": "P -1",
  "P 1 2 1": "P 1 2 1",
  "P 1 1 2": "P 1 1 2",
  "P 1 21 1": "P 1 21 1",
  "P 1 1 21": "P 1 1 21",
  "C 1 2 1": "C 1 2 1",
  "A 1 2 1": "A 1 2 1",
  "A 2": "A 1 2 1",
  "I 1 2 1": "I 1 2 1",
  "I 2": "I 1 2 1",
  "B 1 1 2": "B 1 1 2",
  "B 2": "B 1 1 2",
  "P 1 m 1": "P 1 m 1",
  "P 1 1 m": "P 1 1 m",
  "P 1 c 1": "P 1 c 1",
  "P 1 1 b": "P 1 1 b",
  "C 1 m 1": "C 1 m 1",
  "C 1 c 1": "C 1 c 1",
  "B 1 1 b": "B 1 1 b",
  "P 1 2/m 1": "P 1 2/m 1",
  "P 1 1 2/m": "P 1 1 2/m",
  "P 1 21/m 1": "P 1 21/m 1",
  "P 1 1 21/m": "P 1 1 21/m",
  "C 1 2/m 1": "C 1 2/m 1",
  "B 1 1 2/m": "B 1 1 2/m",
  "P 1 2/c 1": "P 1 2/c 1",
  "P 1 1 2/b": "P 1 1 2/b",
  "P 1 21/c 1": "P 1 21/c 1",
  "P 1 21/n 1": "P 1 21/n 1",
  "P 1 21/a 1": "P 1 21/a 1",
  "P 1 1 21/b": "P 1 1 21/b",
  "C 1 2/c 1": "C 1 2/c 1",
  "B 1 1 2/b": "B 1 1 2/b",
  "P 2 2 2": "P 2 2 2",
  "P 2 2 21": "P 2 2 21",
  "P 21 2 2": "P 21 2 2",
  "P 2 21 2": "P 2 21 2",
  "P 21 21 2": "P 21 21 2",
  "P 2 21 21": "P 2 21 21",
  "P 21 2 21": "P 21 2 21",
  "P 21 21 21": "P 21 21 21",
  "C 2 2 21": "C 2 2 21",
  "C 2 2 2": "C 2 2 2",
  "F 2 2 2": "F 2 2 2",
  "I 2 2 2": "I 2 2 2",
  "I 21 21 21": "I 21 21 21",
  "P m m 2": "P m m 2",
  "P m c 21": "P m c 21",
  "P c c 2": "P c c 2",
  "P m a 2": "P m a 2",
  "P c a 21": "P c a 21",
  "P n c 2": "P n c 2",
  "P m n 21": "P m n 21",
  "P b a 2": "P b a 2",
  "P n a 21": "P n a 21",
  "P n n 2": "P n n 2",
  "C m m 2": "C m m 2",
  "C m c 21": "C m c 21",
  "C c c 2": "C c c 2",
  "A m m 2": "A m m 2",
  "A b m 2": "A b m 2",
  "A m a 2": "A m a 2",
  "A b a 2": "A b a 2",
  "F m m 2": "F m m 2",
  "F d d 2": "F d d 2",
  "I m m 2": "I m m 2",
  "I b a 2": "I b a 2",
  "I m a 2": "I m a 2",
  "P 2/m 2/m 2/m": "P m m m",
  "P m m m": "P m m m",
  "P 2/n 2/n 2/n": "P n n n :1",
  "P n n n": "P n n n :1",
  "P 2/c 2/c 2/m": "P c c m",
  "P c c m": "P c c m",
  "P 2/b 2/a 2/n": "P b a n :1",
  "P b a n": "P b a n :1",
  "P 21/m 2/m 2/a": "P m m a",
  "P m m a": "P m m a",
  "P 2/n 21/n 2/a": "P n n a",
  "P n n a": "P n n a",
  "P 2/m 2/n 21/a": "P m n a",
  "P m n a": "P m n a",
  "P 21/c 2/c 2/a": "P c c a",
  "P c c a": "P c c a",
  "P 21/b 21/a 2/m": "P b a m",
  "P b a m": "P b a m",
  "P 21/c 21/c 2/n": "P c c n",
  "P c c n": "P c c n",
  "P 2/b 21/c 21/m": "P b c m",
  "P b c m": "P b c m",
  "P 21/n 21/n 2/m": "P n n m",
  "P n n m": "P n n m",
  "P 21/m 21/m 2/n": "P m m n :1",
  "P m m n": "P m m n :1",
  "P 21/m 21/m 2/n a": "P m m n :2",
  "P 21/b 2/c 21/n": "P b c n",
  "P b c n": "P b c n",
  "P 21/b 21/c 21/a": "P b c a",
  "P b c a": "P b c a",
  "P 21/n 21/m 21/a": "P n m a",
  "P n m a": "P n m a",
  "C 2/m 2/c 21/m": "C m c m",
  "C m c m": "C m c m",
  "C 2/m 2/c 21/a": "C m c a",
  "C m c a": "C m c a",
  "C 2/m 2/m 2/m": "C m m m",
  "C m m m": "C m m m",
  "C 2/c 2/c 2/m": "C c c m",
  "C c c m": "C c c m",
  "C 2/m 2/m 2/a": "C m m a",
  "C m m a": "C m m a",
  "C c c a": "C c c a :1",
  "C 2/c 2/c 2/a": "C c c a :1",
  "F 2/m 2/m 2/m": "F m m m",
  "F m m m": "F m m m",
  "F 2/d 2/d 2/d": "F d d d :1",
  "F d d d": "F d d d :1",
  "I 2/m 2/m 2/m": "I m m m",
  "I m m m": "I m m m",
  "I 2/b 2/a 2/m": "I b a m",
  "I b a m": "I b a m",
  "I 21/b 21/c 21/a": "I b c a",
  "I b c a": "I b c a",
  "I 21/m 21/m 21/a": "I m m a",
  "I m m a": "I m m a",
  "P 4": "P 4",
  "P 41": "P 41",
  "P 42": "P 42",
  "P 43": "P 43",
  "I 4": "I 4",
  "I 41": "I 41",
  "P -4": "P -4",
  "I -4": "I -4",
  "P 4/m": "P 4/m",
  "P 42/m": "P 42/m",
  "P 4/n": "P 4/n :1",
  "P 42/n": "P 42/n :1",
  "I 4/m": "I 4/m",
  "I 41/a": "I 41/a :1",
  "P 4 2 2": "P 4 2 2",
  "P 4 21 2": "P 4 21 2",
  "P 41 2 2": "P 41 2 2",
  "P 41 21 2": "P 41 21 2",
  "P 42 2 2": "P 42 2 2",
  "P 42 21 2": "P 42 21 2",
  "P 43 2 2": "P 43 2 2",
  "P 43 21 2": "P 43 21 2",
  "I 4 2 2": "I 4 2 2",
  "I 41 2 2": "I 41 2 2",
  "P 4 m m": "P 4 m m",
  "P 4 b m": "P 4 b m",
  "P 42 c m": "P 42 c m",
  "P 42 n m": "P 42 n m",
  "P 4 c c": "P 4 c c",
  "P 4 n c": "P 4 n c",
  "P 42 m c": "P 42 m c",
  "P 42 b c": "P 42 b c",
  "I 4 m m": "I 4 m m",
  "I 4 c m": "I 4 c m",
  "I 41 m d": "I 41 m d",
  "I 41 c d": "I 41 c d",
  "P -4 2 m": "P -4 2 m",
  "P -4 2 c": "P -4 2 c",
  "P -4 21 m": "P -4 21 m",
  "P -4 21 c": "P -4 21 c",
  "P -4 m 2": "P -4 m 2",
  "P -4 c 2": "P -4 c 2",
  "P -4 b 2": "P -4 b 2",
  "P -4 n 2": "P -4 n 2",
  "I -4 m 2": "I -4 m 2",
  "I -4 c 2": "I -4 c 2",
  "I -4 2 m": "I -4 2 m",
  "I -4 2 d": "I -4 2 d",
  "P 4/m 2/m 2/m": "P 4/m m m",
  "P4/m m m": "P 4/m m m",
  "P 4/m 2/c 2/c": "P 4/m c c",
  "P4/m c c": "P 4/m c c",
  "P 4/n 2/b 2/m": "P 4/n b m :1",
  "P4/n b m": "P 4/n b m :1",
  "P 4/n 2/n 2/c": "P 4/n n c :1",
  "P4/n n c": "P 4/n n c :1",
  "P 4/m 21/b 2/m": "P 4/m b m",
  "P4/m b m": "P 4/m b m",
  "P 4/m 21/n 2/c": "P 4/m n c",
  "P4/m n c": "P 4/m n c",
  "P 4/n 21/m 2/m": "P 4/n m m :1",
  "P4/n m m": "P 4/n m m :1",
  "P 4/n 2/c 2/c": "P 4/n c c :1",
  "P4/n c c": "P 4/n c c :1",
  "P 42/m 2/m 2/c": "P 42/m m c",
  "P42/m m c": "P 42/m m c",
  "P 42/m 2/c 2/m": "P 42/m c m",
  "P42/m c m": "P 42/m c m",
  "P 42/n 2/b 2/c": "P 42/n b c :1",
  "P42/n b c": "P 42/n b c :1",
  "P 42/n 2/n 2/m": "P 42/n n m :1",
  "P42/n n m": "P 42/n n m :1",
  "P 42/m 21/b 2/c": "P 42/m b c",
  "P42/m b c": "P 42/m b c",
  "P 42/m 21/n 2/m": "P 42/m n m",
  "P42/m n m": "P 42/m n m",
  "P 42/n 21/m 2/c": "P 42/n m c :1",
  "P42/n m c": "P 42/n m c :1",
  "P 42/n 21/c 2/m": "P 42/n c m :1",
  "P42/n c m": "P 42/n c m :1",
  "I 4/m 2/m 2/m": "I 4/m m m",
  "I4/m m m": "I 4/m m m",
  "I 4/m 2/c 2/m": "I 4/m c m",
  "I4/m c m": "I 4/m c m",
  "I 41/a 2/m 2/d": "I 41/a m d :1",
  "I41/a m d": "I 41/a m d :1",
  "I41/a c d": "I 41/a c d :1",
  "I 41/a 2/c 2/d": "I 41/a c d :1",
  "P 3": "P 3",
  "P 31": "P 31",
  "P 32": "P 32",
  "H 3": "R 3 :H",
  "R 3": "R 3 :R",
  "P -3": "P -3",
  "H -3": "R -3 :H",
  "R -3": "R -3 :R",
  "P 3 1 2": "P 3 1 2",
  "P 3 2 1": "P 3 2 1",
  "P 31 1 2": "P 31 1 2",
  "P 31 2 1": "P 31 2 1",
  "P 32 1 2": "P 32 1 2",
  "P 32 2 1": "P 32 2 1",
  "H 3 2": "R 3 2 :H",
  "R 3 2": "R 3 2 :R",
  "P 3 m 1": "P 3 m 1",
  "P 3 1 m": "P 3 1 m",
  "P 3 c 1": "P 3 c 1",
  "P 3 1 c": "P 3 1 c",
  "H 3 m": "R 3 m :H",
  "R 3 m": "R 3 m :R",
  "H 3 c": "R 3 c :H",
  "R 3 c": "R 3 c :R",
  "P -3 1 2/m": "P -3 1 m",
  "P -3 1 m": "P -3 1 m",
  "P -3 1 2/c": "P -3 1 c",
  "P -3 1 c": "P -3 1 c",
  "P -3 2/m 1": "P -3 m 1",
  "P -3 m 1": "P -3 m 1",
  "P -3 2/c 1": "P -3 c 1",
  "P -3 c 1": "P -3 c 1",
  "H -3 2/m": "R -3 m :H",
  "H -3 m": "R -3 m :H",
  "R -3 2/m": "R -3 m :R",
  "R -3 m": "R -3 m :R",
  "H -3 2/c": "R -3 c :H",
  "H -3 c": "R -3 c :H",
  "R -3 2/c": "R -3 c :R",
  "R -3 c": "R -3 c :R",
  "P 6": "P 6",
  "P 61": "P 61",
  "P 65": "P 65",
  "P 62": "P 62",
  "P 64": "P 64",
  "P 63": "P 63",
  "P -6": "P -6",
  "P 6/m": "P 6/m",
  "P 63/m": "P 63/m",
  "P 6 2 2": "P 6 2 2",
  "P 61 2 2": "P 61 2 2",
  "P 65 2 2": "P 65 2 2",
  "P 62 2 2": "P 62 2 2",
  "P 64 2 2": "P 64 2 2",
  "P 63 2 2": "P 63 2 2",
  "P 6 m m": "P 6 m m",
  "P 6 c c": "P 6 c c",
  "P 63 c m": "P 63 c m",
  "P 63 m c": "P 63 m c",
  "P -6 m 2": "P -6 m 2",
  "P -6 c 2": "P -6 c 2",
  "P -6 2 m": "P -6 2 m",
  "P -6 2 c": "P -6 2 c",
  "P 6/m 2/m 2/m": "P 6/m m m",
  "P 6/m m m": "P 6/m m m",
  "P 6/m 2/c 2/c": "P 6/m c c",
  "P 6/m c c": "P 6/m c c",
  "P 63/m 2/c 2/m": "P 63/m c m",
  "P 63/m c m": "P 63/m c m",
  "P 63/m 2/m 2/c": "P 63/m m c",
  "P 63/m m c": "P 63/m m c",
  "P 2 3": "P 2 3",
  "F 2 3": "F 2 3",
  "I 2 3": "I 2 3",
  "P 21 3": "P 21 3",
  "I 21 3": "I 21 3",
  "P 2/m -3": "P m -3",
  "P m -3": "P m -3",
  "P 2/n -3": "P n -3 :1",
  "P n -3": "P n -3 :1",
  "F 2/m -3": "F m -3",
  "F m -3": "F m -3",
  "F 2/d -3": "F d -3 :1",
  "F d -3": "F d -3 :1",
  "I 2/m -3": "I m -3",
  "I m -3": "I m -3",
  "P 21/a -3": "P a -3",
  "P a -3": "P a -3",
  "I 21/a -3": "I a -3",
  "I a -3": "I a -3",
  "P 4 3 2": "P 4 3 2",
  "P 42 3 2": "P 42 3 2",
  "F 4 3 2": "F 4 3 2",
  "F 41 3 2": "F 41 3 2",
  "I 4 3 2": "I 4 3 2",
  "P 43 3 2": "P 43 3 2",
  "P 41 3 2": "P 41 3 2",
  "I 41 3 2": "I 41 3 2",
  "P -4 3 m": "P -4 3 m",
  "F -4 3 m": "F -4 3 m",
  "I -4 3 m": "I -4 3 m",
  "P -4 3 n": "P -4 3 n",
  "F -4 3 c": "F -4 3 c",
  "I -4 3 d": "I -4 3 d",
  "P 4/m -3 2/m": "P m -3 m",
  "P m -3 m": "P m -3 m",
  "P 4/n -3 2/n": "P n -3 n :1",
  "P n -3 n": "P n -3 n :1",
  "P 42/m -3 2/n": "P m -3 n",
  "P m -3 n": "P m -3 n",
  "P 42/n -3 2/m": "P n -3 m :1",
  "P n -3 m": "P n -3 m :1",
  "F 4/m -3 2/m": "F m -3 m",
  "F m -3 m": "F m -3 m",
  "F 4/m -3 2/c": "F m -3 c",
  "F m -3 c": "F m -3 c",
  "F 41/d -3 2/m": "F d -3 m :1",
  "F d -3 m": "F d -3 m :1",
  "F d -3 c": "F d -3 c :1",
  "F 41/d -3 2/c": "F d -3 c :1",
  "I 4/m -3 2/m": "I m -3 m",
  "I m -3 m": "I m -3 m",
  "I 41/a -3 2/d": "I a -3 d",
  "I a -3 d": "I a -3 d",
  "I 1 21 1": "I 1 21 1",
  "C 1 21 1": "C 1 21 1",
  "B 1 1 m": "B 1 1 m",
  "P 21 21 2 (a)": "",
  "C 2 2 21a)": "",
  "C 2 2 2a": "",
  "F 2 2 2a": "",
  "I 2 2 2a": "",
  "P 42 21 2a": "",
  "I 2 3a": "",
};

export const CAltSpaceGroupElement: React.FC<CCP4i2TaskElementProps> = (
  props
) => {
  const { job, itemName, qualifiers } = props;
  const { setParameter, getTaskItem, getValidationColor } = useJob(job.id);
  const item = getTaskItem(itemName);
  const [value, setValue] = useState<string>("P 1");
  const [inFlight, setInFlight] = useState(false);

  const handleInputChanged = async (arg: any) => {
    setValue(arg);
    setInFlight(true);
    const setParameterArg = {
      object_path: item._objectPath,
      value: value,
    };
    try {
      setParameter(setParameterArg);
    } catch (err) {
      alert(err);
    }
    setInFlight(false);
  };
  return (
    <Card
      sx={{
        border: "3px solid",
        borderColor: getValidationColor(item),
      }}
    >
      <CardHeader
        title={qualifiers?.guiLabel}
        sx={{ backgroundColor: getValidationColor(item) }}
        titleTypographyProps={{ variant: "h6", my: 0, py: 0 }}
        action={
          <Button>
            <Info />
          </Button>
        }
      />
      <CardContent sx={{ my: 0, py: 0 }}>
        {item && (
          <Autocomplete
            sx={{
              mt: 1,
              backgroundColor: inFlight ? "#ffeebe" : "palette.common.white",
            }}
            id="autocomplete-spacegroup"
            multiple={false}
            options={spacegroups}
            value={value}
            style={{ minWidth: "15rem" }}
            onChange={(
              event: React.SyntheticEvent<Element, Event>,
              value: string | null
            ) => {
              if (value) {
                handleInputChanged(value);
              }
            }}
            renderInput={(params: any) => (
              <TextField {...params} label="Space groups" />
            )}
          />
        )}
      </CardContent>
    </Card>
  );
};
