# Generated by Django 4.2.13 on 2024-07-09 06:53

import _socket
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import getpass
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.TextField()),
                ('directory', models.IntegerField(choices=[(1, 'Job Dir'), (2, 'Import Dir')])),
                ('sub_type', models.IntegerField(blank=True, null=True)),
                ('content', models.IntegerField(blank=True, null=True)),
                ('annotation', models.TextField(blank=True)),
                ('job_param_name', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Pending'), (2, 'Queued'), (3, 'Running'), (4, 'Interrupted'), (5, 'Failed'), (6, 'Finished'), (7, 'Running Remotely'), (8, 'File Holder'), (9, 'To Delete'), (10, 'Unsatisfactory')], default=0)),
                ('evaluation', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Best'), (2, 'Good'), (3, 'Rejected')], default=0)),
                ('comments', models.TextField(blank=True)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('task_name', models.CharField(max_length=100)),
                ('process_id', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='db.job')),
            ],
        ),
        migrations.CreateModel(
            name='JobValueKeys',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('creation_user', models.TextField(default=getpass.getuser)),
                ('creation_host', models.TextField(default=_socket.gethostname)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_job_number', models.IntegerField(default=0)),
                ('i1_project_name', models.TextField(blank=True)),
                ('i1_project_directory', models.TextField(blank=True)),
                ('follow_from_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='db.job')),
            ],
        ),
        migrations.CreateModel(
            name='FileImport',
            fields=[
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.file')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.TextField()),
                ('checksum', models.CharField(max_length=32)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServerJob',
            fields=[
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.job')),
                ('server_process_id', models.IntegerField(blank=True, null=True)),
                ('machine', models.CharField(blank=True, max_length=255)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('mechanism', models.CharField(blank=True, max_length=32)),
                ('remote_path', models.CharField(blank=True, max_length=255)),
                ('custom_code_file', models.CharField(blank=True, max_length=255)),
                ('validate', models.CharField(blank=True, max_length=32)),
                ('key_file_name', models.CharField(blank=True, max_length=255)),
                ('server_group', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='XData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_class', models.TextField(db_column='class')),
                ('xml', models.TextField()),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='xdatas', to='db.job')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imports', to='db.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='db.project')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='db.project'),
        ),
        migrations.CreateModel(
            name='FileExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.TextField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='db.file')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='db.job'),
        ),
        migrations.AddField(
            model_name='file',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='files', to='db.filetype'),
        ),
        migrations.CreateModel(
            name='ProjectTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='db.projecttag')),
                ('projects', models.ManyToManyField(related_name='tags', to='db.project')),
            ],
            options={
                'unique_together': {('parent', 'text')},
            },
        ),
        migrations.CreateModel(
            name='JobFloatValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='float_values', to='db.job')),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='db.jobvaluekeys')),
            ],
            options={
                'unique_together': {('job', 'key')},
            },
        ),
        migrations.CreateModel(
            name='JobCharValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='char_values', to='db.job')),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='db.jobvaluekeys')),
            ],
            options={
                'unique_together': {('job', 'key')},
            },
        ),
        migrations.CreateModel(
            name='FileUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'Out'), (1, 'In')])),
                ('job_param_name', models.CharField(blank=True, max_length=32)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_uses', to='db.file')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_uses', to='db.job')),
            ],
            options={
                'unique_together': {('file', 'job', 'role')},
            },
        ),
    ]
